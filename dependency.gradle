/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]

// version
def versions = [:]
versions.kotlin = "1.4.21"
versions.firebase = "17.5.0"
versions.firestore = "21.6.0"
versions.messaging = "20.2.4"
versions.lifecycle = "2.2.0"
versions.coroutine = "1.3.9"
versions.navigation = "2.3.0"
versions.timber = "4.7.1"
versions.browser = "1.2.0"
versions.hilt = "2.29.1-alpha"
versions.hilt_view_model = "1.0.0-alpha02"
versions.koin = "2.0.1"
versions.glide = "4.11.0"
versions.retrofit = "2.9.0"
versions.okhttp3 = "3.8.0"
versions.room = "2.2.5"
versions.paging = "2.1.2"
versions.fragment = "1.2.5"
versions.espresso = "3.1.0"
versions.assertj = "3.18.1"
deps.versions = versions

// dependency
def deps = [:]

// androidx
def androidx = [:]
androidx.appcompat = "androidx.appcompat:appcompat:1.1.0"
androidx.core_ktx = "androidx.core:core-ktx:1.3.1"
androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:1.1.3"

deps.test = [
        //androidTestImplementation
        ext_junit                 : "androidx.test.ext:junit:1.1.2",
        ext_junit_ktx             : "androidx.test.ext:junit-ktx:1.1.2",
        core                      : "androidx.test:core:1.3.0",    // Core library
        runner                    : "androidx.test:runner:1.1.0",  // AndroidJUnitRunner and JUnit Rules
        rules                     : "androidx.test:rules:1.1.0",   // AndroidJUnitRunner and JUnit Rules
        ext_truth                 : "androidx.test.ext:truth:1.0.0",

        arch_core                 : "androidx.arch.core:core-testing:2.1.0",

        junit                     : "junit:junit:4.13",


        // Assertions

        truth                     : "com.google.truth:truth:0.42",


        // Espresso dependencies
        espresso_core             : "androidx.test.espresso:espresso-core:$versions.espresso",
        espresso_contrib          : "androidx.test.espresso:espresso-contrib:$versions.espresso",
        espresso_intents          : "androidx.test.espresso:espresso-intents:$versions.espresso",
        espresso_accessibility    : "androidx.test.espresso:espresso-accessibility:$versions.espresso",
        espresso_web              : "androidx.test.espresso:espresso-web:$versions.espresso",
        espresso_idling_concurrent: "androidx.test.espresso.idling:idling-concurrent:$versions.espresso",

        // The following Espresso dependency can be either "implementation"
        // or "androidTestImplementation", depending on whether you want the
        // dependency to appear on your APK's compile classpath or the test APK
        // classpath.
        esspresso_idling_resource : "androidx.test.espresso:espresso-idling-resource:$versions.espresso",

        mockito_core              : "org.mockito:mockito-core:3.5.2",
        mockito_inline            : "org.mockito:mockito-inline:3.3.3",
        mockito_android           : "org.mockito:mockito-android:3.5.2",
        mockito_kotlin            : "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0",

        assertj_core              : "org.assertj:assertj-core:$versions.assertj"
]

deps.fragment = [
        ktx : "androidx.fragment:fragment-ktx:$versions.fragment",
        testing: "androidx.fragment:fragment-testing:$versions.fragment"
]
deps.lifecycle = [
        runtime_ktx  : "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle",
        extensions   : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
        viewmodel_ktx: "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle",
        livedata_ktx : "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
]
deps.navigation = [
        fragment_ktx: "androidx.navigation:navigation-fragment-ktx:$versions.navigation",
        ui_ktx      : "androidx.navigation:navigation-ui-ktx:$versions.navigation"
]
androidx.material = "com.google.android.material:material:1.1.0"
androidx.swiperefresh = "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
androidx.browser = "androidx.browser:browser:$versions.browser"
deps.androidx = androidx



// AAC Room
deps.room = [
        runtime : "androidx.room:room-runtime:$versions.room",
        ktx     : "androidx.room:room-ktx:$versions.room",        // optional - Kotlin Extensions and Coroutines support for Room
        rxjava  : "androidx.room:room-rxjava2:$versions.room",    // optional - RxJava support for Room
        guava   : "androidx.room:room-guava:$versions.room",      // optional - Guava support for Room, including Optional and ListenableFuture
        testing : "androidx.room:room-testing:$versions.room",    // Test helpers
        compiler: "androidx.room:room-compiler:$versions.room"    // For Kotlin use kapt instead of annotationProcessor
]

// AAC Paging
deps.paging = [
        runtime: "androidx.paging:paging-runtime-ktx:$versions.paging", // For Kotlin use paging-runtime-ktx

        // alternatively - without Android dependencies for testing
        common : "androidx.paging:paging-common-ktx:$versions.paging", // For Kotlin use paging-common-ktx (testImplementation)

        // optional - RxJava support
        rxjava2: "androidx.paging:paging-rxjava2-ktx:$versions.paging" // For Kotlin use paging-rxjava2-ktx
]

// kotlin
def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
deps.coroutines = [
        core         : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine",
        android      : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine",
        play_services: "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versions.coroutine",
        test         : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
]
deps.kotlin = kotlin

// firebase
deps.firebase = [
        core     : "com.google.firebase:firebase-core:$versions.firebase",
        analytics: "com.google.firebase:firebase-analytics:$versions.firebase",
        firestore: "com.google.firebase:firebase-firestore:$versions.firestore",
        messaging: "com.google.firebase:firebase-messaging:$versions.messaging"
]

// Hilt
deps.hilt = [
        android             : "com.google.dagger:hilt-android:$versions.hilt",
        compiler            : "com.google.dagger:hilt-android-compiler:$versions.hilt",
        viewmodel           : "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hilt_view_model",
        common              : "androidx.hilt:hilt-common:$versions.hilt_view_model",
        viewmodel_compiler  : "androidx.hilt:hilt-compiler:$versions.hilt_view_model",
        android_testing     : "com.google.dagger:hilt-android-testing:$versions.hilt"
]

// Koin
deps.koin = [
        koin :"org.koin:koin-android:$versions.koin",
        scope :"org.koin:koin-androidx-scope:$versions.koin",
        viewmodel : "org.koin:koin-androidx-viewmodel:$versions.koin",
        ext : "org.koin:koin-androidx-ext:$versions.koin"
]

deps.google = [
        gson: 'com.google.code.gson:gson:2.8.6',
        flexbox: 'com.google.android:flexbox:2.0.1'
]

// debugging
deps.debugging = [
        timber      : "com.jakewharton.timber:timber:$versions.timber"
]

// Glide
deps.glide = [
        glide      : "com.github.bumptech.glide:glide:$versions.glide",
        annotations: "com.github.bumptech.glide:annotations:$versions.glide",
        compiler   : "com.github.bumptech.glide:compiler:$versions.glide"
]

// Retrofit
deps.retrofit = [
        retrofit       : "com.squareup.retrofit2:retrofit:$versions.retrofit",
        converter_gson : "com.squareup.retrofit2:converter-gson:$versions.retrofit",
        converter_moshi: "com.squareup.retrofit2:converter-moshi:$versions.retrofit",
        adapter_rxjava : "com.squareup.retrofit2:adapter-rxjava2:2.6.2"
]

// OkHttp
deps.okhttp3 = [
        okhttp3: "com.squareup.okhttp3:okhttp:$versions.okhttp3",
        logging: "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
]

deps.rxjava = [
        rxandroid: "io.reactivex.rxjava2:rxandroid:2.0.1",
        rxjava   : "io.reactivex.rxjava2:rxjava:2.1.2"
]

// test
deps.atsl = [
        junit        : "junit:junit:4.13",
        core         : "androidx.test:core:1.3.0",
        ext_junit    : "androidx.test.ext:junit:1.1.2",
        espresso_core: "androidx.test.espresso:espresso-core:3.3.0",
        runner: "androidx.test:runner:1.1.1",
        testing: "androidx.arch.core:core-testing:2.1.0",
        rules: "androidx.test:rules:1.1.1"
]

ext.deps = deps

// build gradle plugin
def gradlePlugin = [
        android             : "com.android.tools.build:gradle:4.1.1",
        kotlin              : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
        play_services       : "com.google.gms:google-services:4.3.3",
        navigation_safe_args: "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation",
        hilt                : "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
]
ext.gradlePlugin = gradlePlugin

// build_versions
ext.build_versions = [
        compile_sdk: 30,
        build_tools: "29.0.2",
        min_sdk    : 21,
        target_sdk : 30
]

// repository
def static addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos